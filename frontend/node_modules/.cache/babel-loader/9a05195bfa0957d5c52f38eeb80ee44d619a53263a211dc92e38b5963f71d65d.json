{"ast":null,"code":"var _jsxFileName = \"E:\\\\hotel-booking\\\\frontend\\\\src\\\\modules\\\\AuthPage\\\\AuthPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\"; // Імпортуємо AuthContext\nimport './AuthPage.scss'; // Імпортуємо стилі\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); // Поле для підтвердження пароля\n  const [username, setUsername] = useState(\"\"); // Для реєстрації\n  const [firstName, setFirstName] = useState(\"\"); // Ім'я\n  const [lastName, setLastName] = useState(\"\"); // Прізвище\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const authContext = useContext(AuthContext);\n  if (!authContext) {\n    throw new Error(\"AuthContext is not available\");\n  }\n  const {\n    login\n  } = authContext;\n\n  // Функція для перевірки валідності email\n  const validateEmail = email => {\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    return emailRegex.test(email);\n  };\n\n  // Функція для перевірки валідності пароля\n  const validatePassword = password => {\n    return password.length >= 6; // Мінімум 6 символів\n  };\n\n  // Функція для валідації форми перед відправкою\n  const validateForm = () => {\n    if (!email || !password || !isLogin && !username || !isLogin && !firstName || !isLogin && !lastName) {\n      setError(\"Будь ласка, заповніть всі поля.\");\n      return false;\n    }\n    if (!validateEmail(email)) {\n      setError(\"Будь ласка, введіть коректну електронну пошту.\");\n      return false;\n    }\n    if (!validatePassword(password)) {\n      setError(\"Пароль повинен бути не менше 6 символів.\");\n      return false;\n    }\n    if (!isLogin && password !== confirmPassword) {\n      setError(\"Паролі не збігаються.\");\n      return false;\n    }\n    setError(null); // Якщо всі перевірки пройшли, очищуємо помилки\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Валідація форми\n    if (!validateForm()) return;\n    setLoading(true);\n    const endpoint = isLogin ? \"login\" : \"register\";\n    const body = {\n      email,\n      password,\n      firstName,\n      lastName,\n      ...(isLogin ? {} : {\n        username\n      })\n    }; // Додаємо поля firstName і lastName при реєстрації\n\n    try {\n      const response = await fetch(`http://localhost:5000/${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        setError(errorData.message || \"Невірний логін або пароль\");\n        return;\n      }\n      const data = await response.json();\n      login(data.token);\n      if (data.token) {\n        const decodedToken = JSON.parse(atob(data.token.split(\".\")[1]));\n        if (decodedToken.role === \"manager\") {\n          navigate(\"/manage-rooms\");\n        } else {\n          navigate(\"/rooms\");\n        }\n      } else {\n        setError(\"Токен не отримано\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Помилка при підключенні до сервера\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0432\\u0430\\u0448\\u0443 \\u0435\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0443 \\u043F\\u043E\\u0448\\u0442\\u0443\",\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0441\\u0432\\u0456\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          id: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"\\u041F\\u0456\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u044C\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u041F\\u0456\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u044C\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          id: \"confirmPassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0412\\u0430\\u0448 username\",\n            type: \"text\",\n            name: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            id: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"\\u0406\\u043C'\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0456\\u043C'\\u044F\",\n            type: \"text\",\n            name: \"firstName\",\n            value: firstName,\n            onChange: e => setFirstName(e.target.value),\n            id: \"firstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"\\u041F\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u043F\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435\",\n            type: \"text\",\n            name: \"lastName\",\n            value: lastName,\n            onChange: e => setLastName(e.target.value),\n            id: \"lastName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Зачекайте...\" : isLogin ? \"Увійти\" : \"Зареєструватися\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isLogin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\u0429\\u0435 \\u043D\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u043E\\u0432\\u0430\\u043D\\u0456?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsLogin(false),\n          children: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\u0412\\u0436\\u0435 \\u043C\\u0430\\u0454\\u0442\\u0435 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsLogin(true),\n          children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"NrzYCeh2kG1aVIxzfCBRc1dS7iw=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useNavigate","useContext","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthPage","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","username","setUsername","firstName","setFirstName","lastName","setLastName","isLogin","setIsLogin","error","setError","loading","setLoading","navigate","authContext","Error","login","validateEmail","emailRegex","test","validatePassword","length","validateForm","handleSubmit","e","preventDefault","endpoint","body","response","fetch","method","headers","JSON","stringify","ok","errorData","json","message","data","token","decodedToken","parse","atob","split","role","err","console","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","name","value","onChange","target","id","disabled","onClick","style","color","_c","$RefreshReg$"],"sources":["E:/hotel-booking/frontend/src/modules/AuthPage/AuthPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\"; // Імпортуємо AuthContext\nimport './AuthPage.scss'; // Імпортуємо стилі\n\nconst AuthPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); // Поле для підтвердження пароля\n  const [username, setUsername] = useState(\"\"); // Для реєстрації\n  const [firstName, setFirstName] = useState(\"\"); // Ім'я\n  const [lastName, setLastName] = useState(\"\"); // Прізвище\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const authContext = useContext(AuthContext);\n\n  if (!authContext) {\n    throw new Error(\"AuthContext is not available\");\n  }\n\n  const { login } = authContext;\n\n  // Функція для перевірки валідності email\n  const validateEmail = (email: string) => {\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    return emailRegex.test(email);\n  };\n\n  // Функція для перевірки валідності пароля\n  const validatePassword = (password: string) => {\n    return password.length >= 6; // Мінімум 6 символів\n  };\n\n  // Функція для валідації форми перед відправкою\n  const validateForm = () => {\n    if (!email || !password || (!isLogin && !username) || (!isLogin && !firstName) || (!isLogin && !lastName)) {\n      setError(\"Будь ласка, заповніть всі поля.\");\n      return false;\n    }\n\n    if (!validateEmail(email)) {\n      setError(\"Будь ласка, введіть коректну електронну пошту.\");\n      return false;\n    }\n\n    if (!validatePassword(password)) {\n      setError(\"Пароль повинен бути не менше 6 символів.\");\n      return false;\n    }\n\n    if (!isLogin && password !== confirmPassword) {\n      setError(\"Паролі не збігаються.\");\n      return false;\n    }\n\n    setError(null);  // Якщо всі перевірки пройшли, очищуємо помилки\n    return true;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Валідація форми\n    if (!validateForm()) return;\n\n    setLoading(true);\n\n    const endpoint = isLogin ? \"login\" : \"register\";\n    const body = { email, password, firstName, lastName, ...(isLogin ? {} : { username }) }; // Додаємо поля firstName і lastName при реєстрації\n\n    try {\n      const response = await fetch(`http://localhost:5000/${endpoint}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        setError(errorData.message || \"Невірний логін або пароль\");\n        return;\n      }\n\n      const data = await response.json();\n      login(data.token);\n\n      if (data.token) {\n        const decodedToken = JSON.parse(atob(data.token.split(\".\")[1]));\n        \n        if (decodedToken.role === \"manager\") {\n          navigate(\"/manage-rooms\");\n        } else {\n          navigate(\"/rooms\");\n        }\n      } else {\n        setError(\"Токен не отримано\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Помилка при підключенні до сервера\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-form-container\">\n      <form onSubmit={handleSubmit} className=\"auth-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            placeholder=\"Введіть вашу електронну пошту\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            id=\"email\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Пароль</label>\n          <input\n            placeholder=\"Введіть свій пароль\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            id=\"password\"\n          />\n        </div>\n\n        {/* Покажемо поле для підтвердження пароля тільки на реєстрації */}\n        {!isLogin && (\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">Підтвердьте пароль</label>\n            <input\n              placeholder=\"Підтвердьте ваш пароль\"\n              type=\"password\"\n              name=\"confirmPassword\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              id=\"confirmPassword\"\n            />\n          </div>\n        )}\n\n        {!isLogin && (\n          <>\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                placeholder=\"Ваш username\"\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                id=\"username\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"firstName\">Ім'я</label>\n              <input\n                placeholder=\"Ваше ім'я\"\n                type=\"text\"\n                name=\"firstName\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                id=\"firstName\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"lastName\">Прізвище</label>\n              <input\n                placeholder=\"Ваше прізвище\"\n                type=\"text\"\n                name=\"lastName\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                id=\"lastName\"\n              />\n            </div>\n          </>\n        )}\n\n        <button type=\"submit\" disabled={loading}>\n          {loading ? \"Зачекайте...\" : isLogin ? \"Увійти\" : \"Зареєструватися\"}\n        </button>\n      </form>\n\n      <p>\n        {isLogin ? (\n          <>\n            Ще не зареєстровані?{\" \"}\n            <button onClick={() => setIsLogin(false)}>Реєстрація</button>\n          </>\n        ) : (\n          <>\n            Вже маєте акаунт?{\" \"}\n            <button onClick={() => setIsLogin(true)}>Увійти</button>\n          </>\n        )}\n      </p>\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n    </div>\n  );\n};\n\nexport default AuthPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,2BAA2B,CAAC,CAAC;AACzD,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM4B,QAAQ,GAAG3B,WAAW,CAAC,CAAC;EAC9B,MAAM4B,WAAW,GAAG3B,UAAU,CAACC,WAAW,CAAC;EAE3C,IAAI,CAAC0B,WAAW,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EACjD;EAEA,MAAM;IAAEC;EAAM,CAAC,GAAGF,WAAW;;EAE7B;EACA,MAAMG,aAAa,GAAItB,KAAa,IAAK;IACvC,MAAMuB,UAAU,GAAG,iDAAiD;IACpE,OAAOA,UAAU,CAACC,IAAI,CAACxB,KAAK,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMyB,gBAAgB,GAAIvB,QAAgB,IAAK;IAC7C,OAAOA,QAAQ,CAACwB,MAAM,IAAI,CAAC,CAAC,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAAC3B,KAAK,IAAI,CAACE,QAAQ,IAAK,CAACU,OAAO,IAAI,CAACN,QAAS,IAAK,CAACM,OAAO,IAAI,CAACJ,SAAU,IAAK,CAACI,OAAO,IAAI,CAACF,QAAS,EAAE;MACzGK,QAAQ,CAAC,iCAAiC,CAAC;MAC3C,OAAO,KAAK;IACd;IAEA,IAAI,CAACO,aAAa,CAACtB,KAAK,CAAC,EAAE;MACzBe,QAAQ,CAAC,gDAAgD,CAAC;MAC1D,OAAO,KAAK;IACd;IAEA,IAAI,CAACU,gBAAgB,CAACvB,QAAQ,CAAC,EAAE;MAC/Ba,QAAQ,CAAC,0CAA0C,CAAC;MACpD,OAAO,KAAK;IACd;IAEA,IAAI,CAACH,OAAO,IAAIV,QAAQ,KAAKE,eAAe,EAAE;MAC5CW,QAAQ,CAAC,uBAAuB,CAAC;MACjC,OAAO,KAAK;IACd;IAEAA,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;IACjB,OAAO,IAAI;EACb,CAAC;EAED,MAAMa,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACH,YAAY,CAAC,CAAC,EAAE;IAErBV,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMc,QAAQ,GAAGnB,OAAO,GAAG,OAAO,GAAG,UAAU;IAC/C,MAAMoB,IAAI,GAAG;MAAEhC,KAAK;MAAEE,QAAQ;MAAEM,SAAS;MAAEE,QAAQ;MAAE,IAAIE,OAAO,GAAG,CAAC,CAAC,GAAG;QAAEN;MAAS,CAAC;IAAE,CAAC,CAAC,CAAC;;IAEzF,IAAI;MACF,MAAM2B,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyBH,QAAQ,EAAE,EAAE;QAChEI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QACvC1B,QAAQ,CAACyB,SAAS,CAACE,OAAO,IAAI,2BAA2B,CAAC;QAC1D;MACF;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCpB,KAAK,CAACsB,IAAI,CAACC,KAAK,CAAC;MAEjB,IAAID,IAAI,CAACC,KAAK,EAAE;QACd,MAAMC,YAAY,GAAGR,IAAI,CAACS,KAAK,CAACC,IAAI,CAACJ,IAAI,CAACC,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/D,IAAIH,YAAY,CAACI,IAAI,KAAK,SAAS,EAAE;UACnC/B,QAAQ,CAAC,eAAe,CAAC;QAC3B,CAAC,MAAM;UACLA,QAAQ,CAAC,QAAQ,CAAC;QACpB;MACF,CAAC,MAAM;QACLH,QAAQ,CAAC,mBAAmB,CAAC;MAC/B;IACF,CAAC,CAAC,OAAOmC,GAAG,EAAE;MACZC,OAAO,CAACrC,KAAK,CAACoC,GAAG,CAAC;MAClBnC,QAAQ,CAAC,oCAAoC,CAAC;IAChD,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEtB,OAAA;IAAKyD,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClC1D,OAAA;MAAM2D,QAAQ,EAAE1B,YAAa;MAACwB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACjD1D,OAAA;QAAKyD,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB1D,OAAA;UAAO4D,OAAO,EAAC,OAAO;UAAAF,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpChE,OAAA;UACEiE,WAAW,EAAC,iKAA+B;UAC3CC,IAAI,EAAC,OAAO;UACZC,IAAI,EAAC,OAAO;UACZC,KAAK,EAAE/D,KAAM;UACbgE,QAAQ,EAAGnC,CAAC,IAAK5B,QAAQ,CAAC4B,CAAC,CAACoC,MAAM,CAACF,KAAK,CAAE;UAC1CG,EAAE,EAAC;QAAO;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENhE,OAAA;QAAKyD,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB1D,OAAA;UAAO4D,OAAO,EAAC,UAAU;UAAAF,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxChE,OAAA;UACEiE,WAAW,EAAC,0GAAqB;UACjCC,IAAI,EAAC,UAAU;UACfC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAE7D,QAAS;UAChB8D,QAAQ,EAAGnC,CAAC,IAAK1B,WAAW,CAAC0B,CAAC,CAACoC,MAAM,CAACF,KAAK,CAAE;UAC7CG,EAAE,EAAC;QAAU;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAGL,CAAC/C,OAAO,iBACPjB,OAAA;QAAKyD,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB1D,OAAA;UAAO4D,OAAO,EAAC,iBAAiB;UAAAF,QAAA,EAAC;QAAkB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3DhE,OAAA;UACEiE,WAAW,EAAC,4HAAwB;UACpCC,IAAI,EAAC,UAAU;UACfC,IAAI,EAAC,iBAAiB;UACtBC,KAAK,EAAE3D,eAAgB;UACvB4D,QAAQ,EAAGnC,CAAC,IAAKxB,kBAAkB,CAACwB,CAAC,CAACoC,MAAM,CAACF,KAAK,CAAE;UACpDG,EAAE,EAAC;QAAiB;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,EAEA,CAAC/C,OAAO,iBACPjB,OAAA,CAAAE,SAAA;QAAAwD,QAAA,gBACE1D,OAAA;UAAKyD,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB1D,OAAA;YAAO4D,OAAO,EAAC,UAAU;YAAAF,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1ChE,OAAA;YACEiE,WAAW,EAAC,6BAAc;YAC1BC,IAAI,EAAC,MAAM;YACXC,IAAI,EAAC,UAAU;YACfC,KAAK,EAAEzD,QAAS;YAChB0D,QAAQ,EAAGnC,CAAC,IAAKtB,WAAW,CAACsB,CAAC,CAACoC,MAAM,CAACF,KAAK,CAAE;YAC7CG,EAAE,EAAC;UAAU;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENhE,OAAA;UAAKyD,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB1D,OAAA;YAAO4D,OAAO,EAAC,WAAW;YAAAF,QAAA,EAAC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvChE,OAAA;YACEiE,WAAW,EAAC,8CAAW;YACvBC,IAAI,EAAC,MAAM;YACXC,IAAI,EAAC,WAAW;YAChBC,KAAK,EAAEvD,SAAU;YACjBwD,QAAQ,EAAGnC,CAAC,IAAKpB,YAAY,CAACoB,CAAC,CAACoC,MAAM,CAACF,KAAK,CAAE;YAC9CG,EAAE,EAAC;UAAW;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENhE,OAAA;UAAKyD,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB1D,OAAA;YAAO4D,OAAO,EAAC,UAAU;YAAAF,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1ChE,OAAA;YACEiE,WAAW,EAAC,2EAAe;YAC3BC,IAAI,EAAC,MAAM;YACXC,IAAI,EAAC,UAAU;YACfC,KAAK,EAAErD,QAAS;YAChBsD,QAAQ,EAAGnC,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACoC,MAAM,CAACF,KAAK,CAAE;YAC7CG,EAAE,EAAC;UAAU;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,eACN,CACH,eAEDhE,OAAA;QAAQkE,IAAI,EAAC,QAAQ;QAACM,QAAQ,EAAEnD,OAAQ;QAAAqC,QAAA,EACrCrC,OAAO,GAAG,cAAc,GAAGJ,OAAO,GAAG,QAAQ,GAAG;MAAiB;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEPhE,OAAA;MAAA0D,QAAA,EACGzC,OAAO,gBACNjB,OAAA,CAAAE,SAAA;QAAAwD,QAAA,GAAE,2GACoB,EAAC,GAAG,eACxB1D,OAAA;UAAQyE,OAAO,EAAEA,CAAA,KAAMvD,UAAU,CAAC,KAAK,CAAE;UAAAwC,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eAC7D,CAAC,gBAEHhE,OAAA,CAAAE,SAAA;QAAAwD,QAAA,GAAE,yFACiB,EAAC,GAAG,eACrB1D,OAAA;UAAQyE,OAAO,EAAEA,CAAA,KAAMvD,UAAU,CAAC,IAAI,CAAE;UAAAwC,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eACxD;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAEH7C,KAAK,iBAAInB,OAAA;MAAG0E,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAjB,QAAA,EAAEvC;IAAK;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAAC5D,EAAA,CA9MID,QAAQ;EAAA,QAUKP,WAAW;AAAA;AAAAgF,EAAA,GAVxBzE,QAAQ;AAgNd,eAAeA,QAAQ;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}