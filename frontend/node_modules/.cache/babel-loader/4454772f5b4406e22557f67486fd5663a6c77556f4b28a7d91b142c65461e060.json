{"ast":null,"code":"/*import { useState } from \"react\";\n\nconst RegisterPage = () => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"client\");\n  const [error, setError] = useState<string | null>(null);  // Стейт для помилок\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);  // Стейт для успіху\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:5000/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, email, password, role }),\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      setSuccessMessage(\"Користувач успішно зареєстрований!\");\n      setError(null); // Якщо все ок, очищаємо помилку\n      console.log(\"Користувач зареєстрований:\", data);\n    } else {\n      setSuccessMessage(null); // Якщо є помилка, очищаємо повідомлення про успіх\n      setError(\"Помилка при реєстрації, спробуйте ще раз.\");\n      console.error(\"Помилка реєстрації\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <select value={role} onChange={(e) => setRole(e.target.value)}>\n        <option value=\"client\">Client</option>\n        <option value=\"manager\">Manager</option>\n      </select>\n      <button type=\"submit\">Зареєструватися</button>\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {successMessage && <p style={{ color: \"green\" }}>{successMessage}</p>}\n    </form>\n  );\n};\n\nexport default RegisterPage;\n*/","map":{"version":3,"names":[],"sources":["E:/hotel-booking/frontend/src/modules/RegisterPage/RegisterPage.tsx"],"sourcesContent":["/*import { useState } from \"react\";\n\nconst RegisterPage = () => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"client\");\n  const [error, setError] = useState<string | null>(null);  // Стейт для помилок\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);  // Стейт для успіху\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:5000/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, email, password, role }),\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      setSuccessMessage(\"Користувач успішно зареєстрований!\");\n      setError(null); // Якщо все ок, очищаємо помилку\n      console.log(\"Користувач зареєстрований:\", data);\n    } else {\n      setSuccessMessage(null); // Якщо є помилка, очищаємо повідомлення про успіх\n      setError(\"Помилка при реєстрації, спробуйте ще раз.\");\n      console.error(\"Помилка реєстрації\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <select value={role} onChange={(e) => setRole(e.target.value)}>\n        <option value=\"client\">Client</option>\n        <option value=\"manager\">Manager</option>\n      </select>\n      <button type=\"submit\">Зареєструватися</button>\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {successMessage && <p style={{ color: \"green\" }}>{successMessage}</p>}\n    </form>\n  );\n};\n\nexport default RegisterPage;\n*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}