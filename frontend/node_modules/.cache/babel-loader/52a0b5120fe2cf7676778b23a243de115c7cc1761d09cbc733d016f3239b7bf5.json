{"ast":null,"code":"var _jsxFileName = \"E:\\\\hotel-booking\\\\frontend\\\\src\\\\modules\\\\RoomsPage\\\\components\\\\RoomsList\\\\RoomsList.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Імпортуємо тип\n\nconst RoomsList = () => {\n  _s();\n  const [rooms, setRooms] = useState([]); // Використовуємо тип Room для стану\n\n  useEffect(() => {\n    // Запит до бекенду для отримання кімнат\n    fetch(\"http://localhost:5000/rooms\") // Це твій бекенд\n    .then(response => response.json()) // Обробка JSON\n    .then(data => setRooms(data)) // Збереження отриманих даних\n    .catch(error => console.error(\"Помилка при отриманні кімнат:\", error)); // Логування помилки\n  }, []); // Пустий масив залежностей - це означає, що запит виконується один раз після рендеру компонента\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043A\\u0456\\u043C\\u043D\\u0430\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rooms.length > 0 ? rooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [room.name, \" - \", room.price, \" \\u0433\\u0440\\u043D\"]\n      }, room.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041D\\u0435\\u043C\\u0430\\u0454 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u0438\\u0445 \\u043A\\u0456\\u043C\\u043D\\u0430\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomsList, \"pVIe8tJm1V/hStRMkuwTtBQhqgo=\");\n_c = RoomsList;\nexport default RoomsList;\nvar _c;\n$RefreshReg$(_c, \"RoomsList\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","RoomsList","_s","rooms","setRooms","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","room","name","price","id","_c","$RefreshReg$"],"sources":["E:/hotel-booking/frontend/src/modules/RoomsPage/components/RoomsList/RoomsList.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Room } from \"../../../../types\"; // Імпортуємо тип\n\nconst RoomsList = () => {\n  const [rooms, setRooms] = useState<Room[]>([]); // Використовуємо тип Room для стану\n\n  useEffect(() => {\n    // Запит до бекенду для отримання кімнат\n    fetch(\"http://localhost:5000/rooms\")  // Це твій бекенд\n      .then((response) => response.json())  // Обробка JSON\n      .then((data) => setRooms(data))  // Збереження отриманих даних\n      .catch((error) => console.error(\"Помилка при отриманні кімнат:\", error));  // Логування помилки\n  }, []); // Пустий масив залежностей - це означає, що запит виконується один раз після рендеру компонента\n\n  return (\n    <div>\n      <h2>Список кімнат</h2>\n      <ul>\n        {rooms.length > 0 ? (\n          rooms.map((room) => (\n            <li key={room.id}>\n              {room.name} - {room.price} грн\n            </li>\n          ))\n        ) : (\n          <p>Немає доступних кімнат</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default RoomsList;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACF;;AAE1C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAO,KAAK,CAAC,6BAA6B,CAAC,CAAE;IAAA,CACnCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAE;IAAA,CACrCF,IAAI,CAAEG,IAAI,IAAKL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAE;IAAA,CAChCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAE;EAC/E,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBjB,OAAA;MAAAa,QAAA,EACGV,KAAK,CAACe,MAAM,GAAG,CAAC,GACff,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACbpB,OAAA;QAAAa,QAAA,GACGO,IAAI,CAACC,IAAI,EAAC,KAAG,EAACD,IAAI,CAACE,KAAK,EAAC,qBAC5B;MAAA,GAFSF,IAAI,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL,CAAC,gBAEFjB,OAAA;QAAAa,QAAA,EAAG;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC7B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CA3BID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}