{"ast":null,"code":"var _jsxFileName = \"E:\\\\hotel-booking\\\\frontend\\\\src\\\\modules\\\\RoomsPage\\\\RoomsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomsPage = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [sortedRooms, setSortedRooms] = useState([]); // Стан для відсортованих номерів\n  const [error, setError] = useState(null);\n  const [sortOrder, setSortOrder] = useState(\"none\"); // Стан для збереження порядку сортування\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/rooms\").then(response => response.json()).then(data => {\n      setRooms(data);\n      setSortedRooms(data); // Встановлюємо номери при першому завантаженні\n    }).catch(err => {\n      setError(\"Помилка при завантаженні номерів\");\n      console.error(err);\n    });\n  }, []);\n\n  // Функція для сортування номерів\n  const sortRooms = order => {\n    const sorted = [...rooms].sort((a, b) => {\n      if (order === \"asc\") {\n        return a.price - b.price; // Сортуємо за зростанням\n      } else {\n        return b.price - a.price; // Сортуємо за спаданням\n      }\n    });\n    setSortedRooms(sorted); // Оновлюємо відсортовані номери\n  };\n\n  // Обробник зміни сортування\n  const handleSortChange = e => {\n    const selectedOrder = e.target.value;\n    setSortOrder(selectedOrder); // Оновлюємо стан для сортування\n\n    if (selectedOrder === \"none\") {\n      setSortedRooms(rooms); // Якщо \"Обрати\", не сортуємо номери\n    } else {\n      sortRooms(selectedOrder); // Сортуємо номери відповідно до вибраного порядку\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041D\\u043E\\u043C\\u0435\\u0440\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sortOrder\",\n        children: \"\\u0421\\u043E\\u0440\\u0442\\u0443\\u0432\\u0430\\u0442\\u0438 \\u0437\\u0430 \\u0446\\u0456\\u043D\\u043E\\u044E: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sortOrder\",\n        value: sortOrder,\n        onChange: handleSortChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"none\",\n          disabled: sortOrder !== \"none\",\n          children: \"\\u041E\\u0431\\u0440\\u0430\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"asc\",\n          children: \"\\u0417\\u0430 \\u0437\\u0440\\u043E\\u0441\\u0442\\u0430\\u043D\\u043D\\u044F\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"desc\",\n          children: \"\\u0417\\u0430 \\u0441\\u043F\\u0430\\u0434\\u0430\\u043D\\u043D\\u044F\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sortedRooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [room.name, \" - \", room.price, \" \\u0433\\u0440\\u043D/\\u0434\\u043E\\u0431\\u0443\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/rooms/${room.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\u041F\\u0435\\u0440\\u0435\\u0433\\u043B\\u044F\\u043D\\u0443\\u0442\\u0438 \\u043D\\u043E\\u043C\\u0435\\u0440\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, room.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomsPage, \"JejY7pVmRiVWk8vxDrlgXE5Fetc=\");\n_c = RoomsPage;\nexport default RoomsPage;\nvar _c;\n$RefreshReg$(_c, \"RoomsPage\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","RoomsPage","_s","rooms","setRooms","sortedRooms","setSortedRooms","error","setError","sortOrder","setSortOrder","fetch","then","response","json","data","catch","err","console","sortRooms","order","sorted","sort","a","b","price","handleSortChange","e","selectedOrder","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","htmlFor","id","onChange","disabled","map","room","name","to","_c","$RefreshReg$"],"sources":["E:/hotel-booking/frontend/src/modules/RoomsPage/RoomsPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst RoomsPage = () => {\n  const [rooms, setRooms] = useState<any[]>([]);\n  const [sortedRooms, setSortedRooms] = useState<any[]>([]); // Стан для відсортованих номерів\n  const [error, setError] = useState<string | null>(null);\n  const [sortOrder, setSortOrder] = useState<\"asc\" | \"desc\" | \"none\">(\"none\"); // Стан для збереження порядку сортування\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/rooms\")\n      .then((response) => response.json())\n      .then((data) => {\n        setRooms(data);\n        setSortedRooms(data); // Встановлюємо номери при першому завантаженні\n      })\n      .catch((err) => {\n        setError(\"Помилка при завантаженні номерів\");\n        console.error(err);\n      });\n  }, []);\n\n  // Функція для сортування номерів\n  const sortRooms = (order: \"asc\" | \"desc\") => {\n    const sorted = [...rooms].sort((a, b) => {\n      if (order === \"asc\") {\n        return a.price - b.price; // Сортуємо за зростанням\n      } else {\n        return b.price - a.price; // Сортуємо за спаданням\n      }\n    });\n    setSortedRooms(sorted); // Оновлюємо відсортовані номери\n  };\n\n  // Обробник зміни сортування\n  const handleSortChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedOrder = e.target.value as \"asc\" | \"desc\" | \"none\";\n    setSortOrder(selectedOrder); // Оновлюємо стан для сортування\n\n    if (selectedOrder === \"none\") {\n      setSortedRooms(rooms); // Якщо \"Обрати\", не сортуємо номери\n    } else {\n      sortRooms(selectedOrder); // Сортуємо номери відповідно до вибраного порядку\n    }\n  };\n\n  return (\n    <div>\n      <h2>Номери</h2>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      <div>\n        <label htmlFor=\"sortOrder\">Сортувати за ціною: </label>\n        <select\n          id=\"sortOrder\"\n          value={sortOrder}\n          onChange={handleSortChange}\n        >\n          <option value=\"none\" disabled={sortOrder !== \"none\"}>Обрати</option> {/* Додаємо опцію \"Обрати\", що стає недоступною при виборі сортування */}\n          <option value=\"asc\">За зростанням</option>\n          <option value=\"desc\">За спаданням</option>\n        </select>\n      </div>\n\n      <ul>\n        {sortedRooms.map((room) => (\n          <li key={room.id}>\n            <p>{room.name} - {room.price} грн/добу</p>\n            <Link to={`/rooms/${room.id}`}>\n              <button>Переглянути номер</button>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default RoomsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}