{"ast":null,"code":"import{useState}from\"react\";import{useNavigate}from\"react-router-dom\";// Для перенаправлення після логіну\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AuthPage=()=>{const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[username,setUsername]=useState(\"\");const[role,setRole]=useState(\"client\");const[isLogin,setIsLogin]=useState(true);// Стан для перемикання між формами\nconst[error,setError]=useState(null);// Для відображення помилок\nconst[loading,setLoading]=useState(false);// Для індикації завантаження\nconst navigate=useNavigate();// Для перенаправлення\nconst handleSubmit=async e=>{e.preventDefault();if(!email||!password||isLogin===false&&!username){setError(\"Будь ласка, заповніть всі поля.\");return;}setLoading(true);setError(null);const endpoint=isLogin?\"login\":\"register\";const body=isLogin?{email,password}:{username,email,password,role};try{const response=await fetch(\"http://localhost:5000/\".concat(endpoint),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(body)});if(response.ok){const data=await response.json();if(isLogin){localStorage.setItem(\"token\",data.token);navigate(\"/rooms\");}else{setError(\"Реєстрація успішна! Тепер ви можете увійти.\");}}else{const errorData=await response.json();setError(errorData.message||\"Невірний логін або пароль\");}}catch(err){console.error(err);setError(\"Помилка при підключенні до сервера\");}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[!isLogin&&/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?\"Зачекайте...\":isLogin?\"Увійти\":\"Зареєструватися\"})]}),/*#__PURE__*/_jsx(\"p\",{children:isLogin?/*#__PURE__*/_jsxs(_Fragment,{children:[\"\\u0429\\u0435 \\u043D\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u043E\\u0432\\u0430\\u043D\\u0456?\",\" \",/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsLogin(false),children:\"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[\"\\u0412\\u0436\\u0435 \\u043C\\u0430\\u0454\\u0442\\u0435 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442?\",\" \",/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsLogin(true),children:\"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"})]})}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:error})]});};export default AuthPage;","map":{"version":3,"names":["useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AuthPage","email","setEmail","password","setPassword","username","setUsername","role","setRole","isLogin","setIsLogin","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","endpoint","body","response","fetch","concat","method","headers","JSON","stringify","ok","data","json","localStorage","setItem","token","errorData","message","err","console","children","onSubmit","type","placeholder","value","onChange","target","disabled","onClick","style","color"],"sources":["E:/hotel-booking/frontend/src/modules/AuthPage/AuthPage.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Для перенаправлення після логіну\n\nconst AuthPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [role, setRole] = useState(\"client\");\n  const [isLogin, setIsLogin] = useState(true); // Стан для перемикання між формами\n  const [error, setError] = useState<string | null>(null); // Для відображення помилок\n  const [loading, setLoading] = useState(false); // Для індикації завантаження\n  const navigate = useNavigate(); // Для перенаправлення\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!email || !password || (isLogin === false && !username)) {\n      setError(\"Будь ласка, заповніть всі поля.\");\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    const endpoint = isLogin ? \"login\" : \"register\";\n    const body = isLogin\n      ? { email, password }\n      : { username, email, password, role };\n\n    try {\n      const response = await fetch(`http://localhost:5000/${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (isLogin) {\n          localStorage.setItem(\"token\", data.token);\n          navigate(\"/rooms\");\n        } else {\n          setError(\"Реєстрація успішна! Тепер ви можете увійти.\");\n        }\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || \"Невірний логін або пароль\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Помилка при підключенні до сервера\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        {/* Відображаємо форму для реєстрації або авторизації */}\n        {!isLogin && (\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        )}\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\" disabled={loading}>\n          {loading ? \"Зачекайте...\" : isLogin ? \"Увійти\" : \"Зареєструватися\"}\n        </button>\n      </form>\n\n      <p>\n        {isLogin ? (\n          <>\n            Ще не зареєстровані?{\" \"}\n            <button onClick={() => setIsLogin(false)}>Реєстрація</button>\n          </>\n        ) : (\n          <>\n            Вже маєте акаунт?{\" \"}\n            <button onClick={() => setIsLogin(true)}>Увійти</button>\n          </>\n        )}\n      </p>\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n    </div>\n  );\n};\n\nexport default AuthPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}