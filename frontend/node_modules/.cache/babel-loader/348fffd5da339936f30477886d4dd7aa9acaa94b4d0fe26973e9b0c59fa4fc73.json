{"ast":null,"code":"var _jsxFileName = \"E:\\\\hotel-booking\\\\frontend\\\\src\\\\modules\\\\AuthPage\\\\AuthPage.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email || !password || isLogin === false && !username) {\n      setError(\"Будь ласка, заповніть всі поля.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const endpoint = isLogin ? \"login\" : \"register\";\n    const body = isLogin ? {\n      email,\n      password\n    } : {\n      username,\n      email,\n      password\n    };\n    try {\n      const response = await fetch(`http://localhost:5000/${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (isLogin) {\n          console.log(\"Saving token to localStorage:\", data.token); // Логування для перевірки\n          localStorage.setItem(\"token\", data.token); // Зберігаємо токен в localStorage\n          const decodedToken = JSON.parse(atob(data.token.split(\".\")[1]));\n          if (decodedToken.role === \"manager\") {\n            navigate(\"/manage-rooms\"); // Перенаправлення на ManageRoomsPage для менеджера\n          } else {\n            navigate(\"/rooms\"); // Перенаправлення на RoomsPage для звичайного користувача\n          }\n        } else {\n          setError(\"Реєстрація успішна! Тепер ви можете увійти.\");\n        }\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || \"Невірний логін або пароль\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Помилка при підключенні до сервера\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [!isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Зачекайте...\" : isLogin ? \"Увійти\" : \"Зареєструватися\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isLogin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\u0429\\u0435 \\u043D\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u043E\\u0432\\u0430\\u043D\\u0456?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsLogin(false),\n          children: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\u0412\\u0436\\u0435 \\u043C\\u0430\\u0454\\u0442\\u0435 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsLogin(true),\n          children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"NaXV3D9Qcpq6OlfTxV3B/lHNGSc=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthPage","_s","email","setEmail","password","setPassword","username","setUsername","isLogin","setIsLogin","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","endpoint","body","response","fetch","method","headers","JSON","stringify","ok","data","json","console","log","token","localStorage","setItem","decodedToken","parse","atob","split","role","errorData","message","err","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","style","color","_c","$RefreshReg$"],"sources":["E:/hotel-booking/frontend/src/modules/AuthPage/AuthPage.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AuthPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!email || !password || (isLogin === false && !username)) {\n      setError(\"Будь ласка, заповніть всі поля.\");\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    const endpoint = isLogin ? \"login\" : \"register\";\n    const body = isLogin\n      ? { email, password }\n      : { username, email, password };\n\n    try {\n      const response = await fetch(`http://localhost:5000/${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (isLogin) {\n          console.log(\"Saving token to localStorage:\", data.token); // Логування для перевірки\n          localStorage.setItem(\"token\", data.token); // Зберігаємо токен в localStorage\n          const decodedToken = JSON.parse(atob(data.token.split(\".\")[1]));\n          if (decodedToken.role === \"manager\") {\n            navigate(\"/manage-rooms\"); // Перенаправлення на ManageRoomsPage для менеджера\n          } else {\n            navigate(\"/rooms\"); // Перенаправлення на RoomsPage для звичайного користувача\n          }\n        } else {\n          setError(\"Реєстрація успішна! Тепер ви можете увійти.\");\n        }\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || \"Невірний логін або пароль\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Помилка при підключенні до сервера\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        {!isLogin && (\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        )}\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\" disabled={loading}>\n          {loading ? \"Зачекайте...\" : isLogin ? \"Увійти\" : \"Зареєструватися\"}\n        </button>\n      </form>\n\n      <p>\n        {isLogin ? (\n          <>\n            Ще не зареєстровані?{\" \"}\n            <button onClick={() => setIsLogin(false)}>Реєстрація</button>\n          </>\n        ) : (\n          <>\n            Вже маєте акаунт?{\" \"}\n            <button onClick={() => setIsLogin(true)}>Увійти</button>\n          </>\n        )}\n      </p>\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n    </div>\n  );\n};\n\nexport default AuthPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}