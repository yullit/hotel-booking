{"ast":null,"code":"useEffect(() => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    navigate(\"/login\");\n    return;\n  }\n  const decodedToken = JSON.parse(atob(token.split(\".\")[1])); // Декодуємо токен\n  if (decodedToken.role === \"manager\") {\n    navigate(\"/manage-rooms\"); // Перенаправляємо на сторінку для менеджера\n  }\n  fetch(\"http://localhost:5000/user/bookings\", {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => response.json()).then(data => {\n    if (Array.isArray(data)) {\n      setBookings(data); // Якщо відповідь є масивом\n    } else {\n      setError(\"Невірний формат даних\"); // Якщо дані мають неправильний формат\n    }\n  }).catch(err => {\n    setError(\"Помилка при отриманні бронювань\");\n    console.error(err);\n  });\n}, [navigate]);","map":{"version":3,"names":["useEffect","token","localStorage","getItem","navigate","decodedToken","JSON","parse","atob","split","role","fetch","headers","Authorization","then","response","json","data","Array","isArray","setBookings","setError","catch","err","console","error"],"sources":["E:/hotel-booking/frontend/src/modules/Dashboard/Dashboard.tsx"],"sourcesContent":["useEffect(() => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    navigate(\"/login\");\n    return;\n  }\n\n  const decodedToken = JSON.parse(atob(token.split(\".\")[1])); // Декодуємо токен\n  if (decodedToken.role === \"manager\") {\n    navigate(\"/manage-rooms\"); // Перенаправляємо на сторінку для менеджера\n  }\n\n  fetch(\"http://localhost:5000/user/bookings\", {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (Array.isArray(data)) {\n        setBookings(data); // Якщо відповідь є масивом\n      } else {\n        setError(\"Невірний формат даних\");  // Якщо дані мають неправильний формат\n      }\n    })\n    .catch((err) => {\n      setError(\"Помилка при отриманні бронювань\");\n      console.error(err);\n    });\n}, [navigate]);\n"],"mappings":"AAAAA,SAAS,CAAC,MAAM;EACd,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACVG,QAAQ,CAAC,QAAQ,CAAC;IAClB;EACF;EAEA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACP,KAAK,CAACQ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5D,IAAIJ,YAAY,CAACK,IAAI,KAAK,SAAS,EAAE;IACnCN,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;EAC7B;EAEAO,KAAK,CAAC,qCAAqC,EAAE;IAC3CC,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUZ,KAAK;IAChC;EACF,CAAC,CAAC,CACCa,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;IACd,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;MACvBG,WAAW,CAACH,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACLI,QAAQ,CAAC,uBAAuB,CAAC,CAAC,CAAE;IACtC;EACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACdF,QAAQ,CAAC,iCAAiC,CAAC;IAC3CG,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;EACpB,CAAC,CAAC;AACN,CAAC,EAAE,CAACnB,QAAQ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}