{"ast":null,"code":"var _jsxFileName = \"E:\\\\hotel-booking\\\\frontend\\\\src\\\\modules\\\\RoomsPage\\\\RoomsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Імпортуємо тип Room\n\nconst RoomsPage = () => {\n  _s();\n  const [rooms, setRooms] = useState([]); // Тип для rooms\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n    fetch(\"http://localhost:5000/rooms\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"Rooms data:\", data); // Перевірка отриманих даних\n      setRooms(data);\n    }).catch(err => console.error(\"Помилка при отриманні кімнат:\", err));\n  }, [navigate]);\n\n  // Обробник для бронювання\n  const handleBooking = async roomId => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n    const checkIn = \"2025-06-01\"; // Тут можна отримати значення з форми\n    const checkOut = \"2025-06-07\"; // Тут можна отримати значення з форми\n\n    try {\n      const response = await fetch(\"http://localhost:5000/user/bookings\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          roomId,\n          checkIn,\n          checkOut\n        })\n      });\n      if (response.ok) {\n        const booking = await response.json();\n        console.log(\"Booking successful\", booking);\n        alert(\"Бронювання успішно створено!\");\n      } else {\n        const error = await response.json();\n        alert(\"Помилка при бронюванні: \" + error.message);\n      }\n    } catch (err) {\n      console.error(\"Error while booking\", err);\n      alert(\"Помилка при бронюванні\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041D\\u043E\\u043C\\u0435\\u0440\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [room.name, \" - \", room.price, \" \\u0433\\u0440\\u043D/\\u0434\\u0435\\u043D\\u044C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBooking(room.id),\n          children: \"\\u0417\\u0430\\u0431\\u0440\\u043E\\u043D\\u044E\\u0432\\u0430\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, room.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomsPage, \"g79V6BVkGJeOXsjcQvHtvISxtCE=\", false, function () {\n  return [useNavigate];\n});\n_c = RoomsPage;\nexport default RoomsPage;\nvar _c;\n$RefreshReg$(_c, \"RoomsPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","RoomsPage","_s","rooms","setRooms","navigate","token","localStorage","getItem","fetch","headers","Authorization","then","response","json","data","console","log","catch","err","error","handleBooking","roomId","checkIn","checkOut","method","body","JSON","stringify","ok","booking","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","room","name","price","onClick","id","_c","$RefreshReg$"],"sources":["E:/hotel-booking/frontend/src/modules/RoomsPage/RoomsPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Room } from \"../../types/Room\"; // Імпортуємо тип Room\n\nconst RoomsPage = () => {\n  const [rooms, setRooms] = useState<Room[]>([]); // Тип для rooms\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n\n    fetch(\"http://localhost:5000/rooms\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Rooms data:\", data); // Перевірка отриманих даних\n        setRooms(data);\n      })\n      .catch((err) => console.error(\"Помилка при отриманні кімнат:\", err));\n  }, [navigate]);\n\n  // Обробник для бронювання\n  const handleBooking = async (roomId: number) => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n\n    const checkIn = \"2025-06-01\"; // Тут можна отримати значення з форми\n    const checkOut = \"2025-06-07\"; // Тут можна отримати значення з форми\n\n    try {\n      const response = await fetch(\"http://localhost:5000/user/bookings\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ roomId, checkIn, checkOut }),\n      });\n\n      if (response.ok) {\n        const booking = await response.json();\n        console.log(\"Booking successful\", booking);\n        alert(\"Бронювання успішно створено!\");\n      } else {\n        const error = await response.json();\n        alert(\"Помилка при бронюванні: \" + error.message);\n      }\n    } catch (err) {\n      console.error(\"Error while booking\", err);\n      alert(\"Помилка при бронюванні\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Номери</h2>\n      <ul>\n        {rooms.map((room) => (\n          <li key={room.id}>\n            <p>\n              {room.name} - {room.price} грн/день\n            </p>\n            <button onClick={() => handleBooking(room.id)}>Забронювати</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default RoomsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}