{"ast":null,"code":"var _jsxFileName = \"E:\\\\hotel-booking\\\\frontend\\\\src\\\\modules\\\\AuthPage\\\\AuthPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport \"./AuthPage.scss\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [emailError, setEmailError] = useState(null);\n  const [passwordError, setPasswordError] = useState(null);\n  const [confirmPasswordError, setConfirmPasswordError] = useState(null);\n  const [firstNameError, setFirstNameError] = useState(null);\n  const [lastNameError, setLastNameError] = useState(null);\n  const navigate = useNavigate();\n  const authContext = useContext(AuthContext);\n  if (!authContext) {\n    throw new Error(\"AuthContext is not available\");\n  }\n  const {\n    login\n  } = authContext;\n  const validateEmail = email => {\n    const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    return regex.test(email);\n  };\n  const validatePassword = password => password.length >= 6;\n  const validateConfirmPassword = (password, confirmPassword) => password === confirmPassword;\n  const validateNameLength = name => name.trim().length >= 2;\n  const validateForm = () => {\n    let valid = true;\n    if (!validateEmail(email)) {\n      setEmailError(\"Електронна пошта повинна мати формат: user@example.com\");\n      valid = false;\n    } else {\n      setEmailError(null);\n    }\n    if (!validatePassword(password)) {\n      setPasswordError(\"Пароль має бути не менше 6 символів.\");\n      valid = false;\n    } else {\n      setPasswordError(null);\n    }\n    if (!isLogin && !validateConfirmPassword(password, confirmPassword)) {\n      setConfirmPasswordError(\"Паролі не збігаються.\");\n      valid = false;\n    } else {\n      setConfirmPasswordError(null);\n    }\n    if (!isLogin && !firstName) {\n      setFirstNameError(\"Будь ласка, введіть ваше ім'я.\");\n      valid = false;\n    } else if (!isLogin && !validateNameLength(firstName)) {\n      setFirstNameError(\"Ім'я має містити щонайменше 2 символи.\");\n      valid = false;\n    } else {\n      setFirstNameError(null);\n    }\n    if (!isLogin && !lastName) {\n      setLastNameError(\"Будь ласка, введіть ваше прізвище.\");\n      valid = false;\n    } else if (!isLogin && !validateNameLength(lastName)) {\n      setLastNameError(\"Прізвище має містити щонайменше 2 символи.\");\n      valid = false;\n    } else {\n      setLastNameError(null);\n    }\n    return valid;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      setError(\"Будь ласка, виправте помилки.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const endpoint = isLogin ? \"login\" : \"register\";\n    const body = {\n      email,\n      password,\n      firstName,\n      lastName\n    };\n    try {\n      const response = await fetch(`http://localhost:5000/${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.message || \"Сталася помилка при реєстрації або авторизації.\");\n        return;\n      }\n      login(data.token);\n      if (data.token) {\n        const decodedToken = JSON.parse(atob(data.token.split(\".\")[1]));\n        if (decodedToken.role === \"manager\") {\n          navigate(\"/manage-rooms\");\n        } else {\n          navigate(\"/rooms\");\n        }\n      } else {\n        setError(\"Токен не отримано\");\n      }\n    } catch (err) {\n      setError(\"Не вдалося з'єднатися з сервером. Спробуйте пізніше.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0441\\u0432\\u043E\\u044E \\u0435\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0443 \\u043F\\u043E\\u0448\\u0442\\u0443\",\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u0412\\u0435\\u0434\\u0456\\u0442\\u044C \\u0441\\u0432\\u0456\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          id: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"\\u041F\\u0456\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u044C\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u041F\\u0456\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u044C\\u0442\\u0435 \\u0441\\u0432\\u0456\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          id: \"confirmPassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), confirmPasswordError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: confirmPasswordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"\\u0406\\u043C'\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0412\\u043A\\u0430\\u0436\\u0456\\u0442\\u044C \\u0441\\u0432\\u043E\\u0454 \\u0456\\u043C'\\u044F\",\n            type: \"text\",\n            name: \"firstName\",\n            value: firstName,\n            onChange: e => setFirstName(e.target.value),\n            id: \"firstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), firstNameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: firstNameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"\\u041F\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0412\\u043A\\u0430\\u0436\\u0456\\u0442\\u044C \\u0441\\u0432\\u043E\\u0454 \\u043F\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435\",\n            type: \"text\",\n            name: \"lastName\",\n            value: lastName,\n            onChange: e => setLastName(e.target.value),\n            id: \"lastName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), lastNameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: lastNameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Зачекайте...\" : isLogin ? \"Увійти\" : \"Зареєструватися\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message-global\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isLogin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\u0429\\u0435 \\u043D\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u043E\\u0432\\u0430\\u043D\\u0456?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsLogin(false),\n          children: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\u0412\\u0436\\u0435 \\u043C\\u0430\\u0454\\u0442\\u0435 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsLogin(true),\n          children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"/rqe6eMH0b/I3IfHhUdrIh9QXDA=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthPage","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","isLogin","setIsLogin","error","setError","loading","setLoading","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","firstNameError","setFirstNameError","lastNameError","setLastNameError","navigate","authContext","Error","login","validateEmail","regex","test","validatePassword","length","validateConfirmPassword","validateNameLength","name","trim","validateForm","valid","handleSubmit","e","preventDefault","endpoint","body","response","fetch","method","headers","JSON","stringify","data","json","ok","message","token","decodedToken","parse","atob","split","role","err","className","children","onSubmit","noValidate","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","value","onChange","target","id","disabled","onClick","_c","$RefreshReg$"],"sources":["E:/hotel-booking/frontend/src/modules/AuthPage/AuthPage.tsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport \"./AuthPage.scss\";\n\nconst AuthPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const [emailError, setEmailError] = useState<string | null>(null);\n  const [passwordError, setPasswordError] = useState<string | null>(null);\n  const [confirmPasswordError, setConfirmPasswordError] = useState<string | null>(null);\n  const [firstNameError, setFirstNameError] = useState<string | null>(null);\n  const [lastNameError, setLastNameError] = useState<string | null>(null);\n\n  const navigate = useNavigate();\n  const authContext = useContext(AuthContext);\n\n  if (!authContext) {\n    throw new Error(\"AuthContext is not available\");\n  }\n\n  const { login } = authContext;\n\n  const validateEmail = (email: string) => {\n    const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    return regex.test(email);\n  };\n\n  const validatePassword = (password: string) => password.length >= 6;\n\n  const validateConfirmPassword = (password: string, confirmPassword: string) =>\n    password === confirmPassword;\n\n  const validateNameLength = (name: string) => name.trim().length >= 2;\n\n  const validateForm = () => {\n    let valid = true;\n\n    if (!validateEmail(email)) {\n      setEmailError(\"Електронна пошта повинна мати формат: user@example.com\");\n      valid = false;\n    } else {\n      setEmailError(null);\n    }\n\n    if (!validatePassword(password)) {\n      setPasswordError(\"Пароль має бути не менше 6 символів.\");\n      valid = false;\n    } else {\n      setPasswordError(null);\n    }\n\n    if (!isLogin && !validateConfirmPassword(password, confirmPassword)) {\n      setConfirmPasswordError(\"Паролі не збігаються.\");\n      valid = false;\n    } else {\n      setConfirmPasswordError(null);\n    }\n\n    if (!isLogin && !firstName) {\n      setFirstNameError(\"Будь ласка, введіть ваше ім'я.\");\n      valid = false;\n    } else if (!isLogin && !validateNameLength(firstName)) {\n      setFirstNameError(\"Ім'я має містити щонайменше 2 символи.\");\n      valid = false;\n    } else {\n      setFirstNameError(null);\n    }\n\n    if (!isLogin && !lastName) {\n      setLastNameError(\"Будь ласка, введіть ваше прізвище.\");\n      valid = false;\n    } else if (!isLogin && !validateNameLength(lastName)) {\n      setLastNameError(\"Прізвище має містити щонайменше 2 символи.\");\n      valid = false;\n    } else {\n      setLastNameError(null);\n    }\n\n    return valid;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      setError(\"Будь ласка, виправте помилки.\");\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    const endpoint = isLogin ? \"login\" : \"register\";\n    const body = { email, password, firstName, lastName };\n\n    try {\n      const response = await fetch(`http://localhost:5000/${endpoint}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        setError(data.message || \"Сталася помилка при реєстрації або авторизації.\");\n        return;\n      }\n\n      login(data.token);\n\n      if (data.token) {\n        const decodedToken = JSON.parse(atob(data.token.split(\".\")[1]));\n        if (decodedToken.role === \"manager\") {\n          navigate(\"/manage-rooms\");\n        } else {\n          navigate(\"/rooms\");\n        }\n      } else {\n        setError(\"Токен не отримано\");\n      }\n    } catch (err) {\n      setError(\"Не вдалося з'єднатися з сервером. Спробуйте пізніше.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-form-container\">\n      <form onSubmit={handleSubmit} className=\"auth-form\" noValidate>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            placeholder=\"Введіть свою електронну пошту\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            id=\"email\"\n          />\n          {emailError && <div className=\"error-message\">{emailError}</div>}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Пароль</label>\n          <input\n            placeholder=\"Ведіть свій пароль\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            id=\"password\"\n          />\n          {passwordError && <div className=\"error-message\">{passwordError}</div>}\n        </div>\n\n        {!isLogin && (\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">Підтвердьте пароль</label>\n            <input\n              placeholder=\"Підтвердьте свій пароль\"\n              type=\"password\"\n              name=\"confirmPassword\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              id=\"confirmPassword\"\n            />\n            {confirmPasswordError && <div className=\"error-message\">{confirmPasswordError}</div>}\n          </div>\n        )}\n\n        {!isLogin && (\n          <>\n            <div className=\"form-group\">\n              <label htmlFor=\"firstName\">Ім'я</label>\n              <input\n                placeholder=\"Вкажіть своє ім'я\"\n                type=\"text\"\n                name=\"firstName\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                id=\"firstName\"\n              />\n              {firstNameError && <div className=\"error-message\">{firstNameError}</div>}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"lastName\">Прізвище</label>\n              <input\n                placeholder=\"Вкажіть своє прізвище\"\n                type=\"text\"\n                name=\"lastName\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                id=\"lastName\"\n              />\n              {lastNameError && <div className=\"error-message\">{lastNameError}</div>}\n            </div>\n          </>\n        )}\n\n        <button type=\"submit\" disabled={loading}>\n          {loading ? \"Зачекайте...\" : isLogin ? \"Увійти\" : \"Зареєструватися\"}\n        </button>\n      </form>\n\n      {error && <p className=\"error-message-global\">{error}</p>}\n\n      <p>\n        {isLogin ? (\n          <>\n            Ще не зареєстровані?{\" \"}\n            <button onClick={() => setIsLogin(false)}>Реєстрація</button>\n          </>\n        ) : (\n          <>\n            Вже маєте акаунт?{\" \"}\n            <button onClick={() => setIsLogin(true)}>Увійти</button>\n          </>\n        )}\n      </p>\n    </div>\n  );\n};\n\nexport default AuthPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}