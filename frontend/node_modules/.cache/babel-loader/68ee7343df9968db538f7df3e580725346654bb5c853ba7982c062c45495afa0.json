{"ast":null,"code":"var _jsxFileName = \"E:\\\\hotel-booking\\\\frontend\\\\src\\\\modules\\\\BookingPage\\\\BookingPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\"; // Імпортуємо Stripe Elements\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Отримуємо ID номера\n  const navigate = useNavigate();\n  const [room, setRoom] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n    if (id) {\n      fetch(`http://localhost:5000/rooms/${id}`).then(response => response.json()).then(data => setRoom(data)).catch(err => {\n        setError(\"Помилка при завантаженні номеру\");\n        console.error(err);\n      });\n    }\n  }, [id, navigate]);\n  const handlePayment = async () => {\n    if (!stripe || !elements) {\n      // Якщо Stripe або Elements ще не ініціалізовані, не робимо нічого\n      return;\n    }\n    setLoading(true);\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n    try {\n      // Запит на створення Payment Intent\n      const response = await fetch(\"http://localhost:5000/create-payment-intent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          amount: room.price\n        }) // amount - це ціна номера\n      });\n      const {\n        clientSecret\n      } = await response.json(); // Отримуємо clientSecret\n\n      // Завершення платежу через Stripe Elements\n      const {\n        error,\n        paymentIntent\n      } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement) // Збираємо дані картки\n        }\n      });\n      if (error) {\n        setError(error.message || \"Помилка при обробці платежу\"); // Якщо є помилка при оплаті\n      } else if (paymentIntent.status === \"succeeded\") {\n        // Якщо оплата пройшла успішно\n        const token = localStorage.getItem(\"token\");\n        fetch(\"http://localhost:5000/user/bookings\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            roomId: id,\n            checkIn: \"2025-06-01\",\n            checkOut: \"2025-06-07\"\n          }) // Передаємо дату бронювання\n        }).then(() => {\n          alert(\"Бронювання успішно створено!\");\n          navigate(\"/dashboard\"); // Перенаправляємо користувача в особистий кабінет\n        }).catch(err => {\n          setError(\"Помилка при створенні бронювання\");\n          console.error(err);\n        });\n      }\n    } catch (err) {\n      setError(\"Помилка при обробці платежу\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 21\n  }, this);\n  if (!room) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u043D\\u043E\\u043C\\u0435\\u0440\\u0443...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u0411\\u0440\\u043E\\u043D\\u044E\\u0432\\u0430\\u043D\\u043D\\u044F \\u043D\\u043E\\u043C\\u0435\\u0440\\u0443: \", room.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0426\\u0456\\u043D\\u0430: \", room.price, \" \\u0433\\u0440\\u043D/\\u0434\\u0435\\u043D\\u044C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      disabled: loading,\n      children: loading ? \"Зачекайте...\" : \"Оплатити та підтвердити бронювання\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingPage, \"KPceBW37f/8WACMSHpI3K8dttBw=\", false, function () {\n  return [useParams, useNavigate, useStripe, useElements];\n});\n_c = BookingPage;\nexport default BookingPage;\nvar _c;\n$RefreshReg$(_c, \"BookingPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","BookingPage","_s","id","navigate","room","setRoom","error","setError","loading","setLoading","stripe","elements","token","localStorage","getItem","fetch","then","response","json","data","catch","err","console","handlePayment","method","headers","Authorization","body","JSON","stringify","amount","price","clientSecret","paymentIntent","confirmCardPayment","payment_method","card","getElement","message","status","roomId","checkIn","checkOut","alert","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/hotel-booking/frontend/src/modules/BookingPage/BookingPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";  // Імпортуємо Stripe Elements\n\nconst BookingPage = () => {\n  const { id } = useParams();  // Отримуємо ID номера\n  const navigate = useNavigate();\n  const [room, setRoom] = useState<any>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n\n    if (id) {\n      fetch(`http://localhost:5000/rooms/${id}`)\n        .then((response) => response.json())\n        .then((data) => setRoom(data))\n        .catch((err) => {\n          setError(\"Помилка при завантаженні номеру\");\n          console.error(err);\n        });\n    }\n  }, [id, navigate]);\n\n  const handlePayment = async () => {\n    if (!stripe || !elements) {\n      // Якщо Stripe або Elements ще не ініціалізовані, не робимо нічого\n      return;\n    }\n\n    setLoading(true);\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n\n    try {\n      // Запит на створення Payment Intent\n      const response = await fetch(\"http://localhost:5000/create-payment-intent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ amount: room.price }),  // amount - це ціна номера\n      });\n\n      const { clientSecret } = await response.json(); // Отримуємо clientSecret\n\n      // Завершення платежу через Stripe Elements\n      const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement), // Збираємо дані картки\n        },\n      });\n\n      if (error) {\n        setError(error.message || \"Помилка при обробці платежу\"); // Якщо є помилка при оплаті\n      } else if (paymentIntent.status === \"succeeded\") {\n        // Якщо оплата пройшла успішно\n        const token = localStorage.getItem(\"token\");\n        fetch(\"http://localhost:5000/user/bookings\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify({ roomId: id, checkIn: \"2025-06-01\", checkOut: \"2025-06-07\" }), // Передаємо дату бронювання\n        })\n          .then(() => {\n            alert(\"Бронювання успішно створено!\");\n            navigate(\"/dashboard\");  // Перенаправляємо користувача в особистий кабінет\n          })\n          .catch((err) => {\n            setError(\"Помилка при створенні бронювання\");\n            console.error(err);\n          });\n      }\n    } catch (err) {\n      setError(\"Помилка при обробці платежу\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (error) return <p style={{ color: \"red\" }}>{error}</p>;\n  if (!room) return <p>Завантаження номеру...</p>;\n\n  return (\n    <div>\n      <h2>Бронювання номеру: {room.name}</h2>\n      <p>Ціна: {room.price} грн/день</p>\n      <div>\n        {/* Форма для введення платіжних даних */}\n        <CardElement />\n      </div>\n      <button onClick={handlePayment} disabled={loading}>\n        {loading ? \"Зачекайте...\" : \"Оплатити та підтвердити бронювання\"}\n      </button>\n    </div>\n  );\n};\n\nexport default BookingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}