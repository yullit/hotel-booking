{"ast":null,"code":"var _jsxFileName = \"E:\\\\hotel-booking\\\\frontend\\\\src\\\\modules\\\\BookingPage\\\\BookingPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Отримуємо id з URL\n  const navigate = useNavigate();\n  const [room, setRoom] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\"); // Якщо користувач не авторизований, перенаправляємо на сторінку логіну\n      return;\n    }\n    if (id) {\n      // Отримуємо дані про номер по ID\n      fetch(`http://localhost:5000/rooms/${id}`).then(response => response.json()).then(data => setRoom(data)).catch(err => {\n        setError(\"Помилка при завантаженні номеру\");\n        console.error(err);\n      });\n    }\n  }, [id, navigate]);\n  const handlePayment = async () => {\n    setLoading(true);\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/create-checkout-session\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          roomId: id,\n          amount: room.price\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        setError(errorData.message || \"Помилка при створенні сесії\");\n        return;\n      }\n      const {\n        url\n      } = await response.json();\n      window.location.href = url; // Перенаправляємо на Stripe для оплати\n    } catch (err) {\n      setError(\"Помилка при підключенні до сервера\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 21\n  }, this);\n  if (!room) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u043D\\u043E\\u043C\\u0435\\u0440\\u0443...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u0411\\u0440\\u043E\\u043D\\u044E\\u0432\\u0430\\u043D\\u043D\\u044F \\u043D\\u043E\\u043C\\u0435\\u0440\\u0443: \", room.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0426\\u0456\\u043D\\u0430: \", room.price, \" \\u0433\\u0440\\u043D/\\u0434\\u0435\\u043D\\u044C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      disabled: loading,\n      children: loading ? \"Зачекайте...\" : \"Оплатити та підтвердити бронювання\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingPage, \"v/+dP0s24F+bgzOW0urSgpmlRns=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BookingPage;\nexport default BookingPage;\nvar _c;\n$RefreshReg$(_c, \"BookingPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","jsxDEV","_jsxDEV","BookingPage","_s","id","navigate","room","setRoom","error","setError","loading","setLoading","token","localStorage","getItem","fetch","then","response","json","data","catch","err","console","handlePayment","method","headers","Authorization","body","JSON","stringify","roomId","amount","price","ok","errorData","message","url","window","location","href","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/hotel-booking/frontend/src/modules/BookingPage/BookingPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst BookingPage = () => {\n  const { id } = useParams(); // Отримуємо id з URL\n  const navigate = useNavigate();\n  const [room, setRoom] = useState<any>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\"); // Якщо користувач не авторизований, перенаправляємо на сторінку логіну\n      return;\n    }\n\n    if (id) {\n      // Отримуємо дані про номер по ID\n      fetch(`http://localhost:5000/rooms/${id}`)\n        .then((response) => response.json())\n        .then((data) => setRoom(data))\n        .catch((err) => {\n          setError(\"Помилка при завантаженні номеру\");\n          console.error(err);\n        });\n    }\n  }, [id, navigate]);\n\n  const handlePayment = async () => {\n    setLoading(true);\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:5000/create-checkout-session\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ roomId: id, amount: room.price }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        setError(errorData.message || \"Помилка при створенні сесії\");\n        return;\n      }\n\n      const { url } = await response.json();\n      window.location.href = url;  // Перенаправляємо на Stripe для оплати\n    } catch (err) {\n      setError(\"Помилка при підключенні до сервера\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (error) return <p style={{ color: \"red\" }}>{error}</p>;\n  if (!room) return <p>Завантаження номеру...</p>;\n\n  return (\n    <div>\n      <h2>Бронювання номеру: {room.name}</h2>\n      <p>Ціна: {room.price} грн/день</p>\n      <button onClick={handlePayment} disabled={loading}>\n        {loading ? \"Зачекайте...\" : \"Оплатити та підтвердити бронювання\"}\n      </button>\n    </div>\n  );\n};\n\nexport default BookingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}