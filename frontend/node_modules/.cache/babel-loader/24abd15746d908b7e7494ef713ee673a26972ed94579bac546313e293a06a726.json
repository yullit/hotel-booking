{"ast":null,"code":"var _jsxFileName = \"E:\\\\hotel-booking\\\\frontend\\\\src\\\\modules\\\\BookingPage\\\\BookingPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\"; // Імпортуємо Stripe Elements\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Отримуємо ID номера\n  const navigate = useNavigate();\n  const location = useLocation(); // Отримуємо state з RoomDetailsPage\n  const {\n    checkInDate,\n    checkOutDate\n  } = location.state || {};\n  const [room, setRoom] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [totalPrice, setTotalPrice] = useState(0); // Загальна ціна\n  const stripe = useStripe();\n  const elements = useElements();\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n    if (id) {\n      fetch(`http://localhost:5000/rooms/${id}`).then(response => response.json()).then(data => setRoom(data)).catch(err => {\n        setError(\"Помилка при завантаженні номеру\");\n        console.error(err);\n      });\n    }\n  }, [id, navigate]);\n\n  // Функція для обчислення кількості днів між датами\n  const calculateDays = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const diffTime = Math.abs(end.getTime() - start.getTime());\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); // Перетворюємо мілісекунди на дні\n    return diffDays;\n  };\n\n  // Обчислюємо загальну суму\n  useEffect(() => {\n    if (checkInDate && checkOutDate && room) {\n      const days = calculateDays(checkInDate, checkOutDate);\n      setTotalPrice(room.price * days); // Множимо ціну за день на кількість днів\n    }\n  }, [checkInDate, checkOutDate, room]);\n  const handlePayment = async () => {\n    if (!stripe || !elements) {\n      // Якщо Stripe або Elements ще не ініціалізовані, не робимо нічого\n      return;\n    }\n    setLoading(true);\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n    try {\n      // Запит на створення Payment Intent\n      const response = await fetch(\"http://localhost:5000/create-payment-intent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          amount: totalPrice\n        }) // amount - це ціна номера\n      });\n      const {\n        clientSecret\n      } = await response.json(); // Отримуємо clientSecret\n\n      const cardElement = elements.getElement(CardElement);\n      if (!cardElement) {\n        setError(\"Не вдалося отримати дані картки\");\n        return;\n      }\n\n      // Завершення платежу через Stripe Elements\n      const {\n        error,\n        paymentIntent\n      } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: cardElement // Збираємо дані картки\n        }\n      });\n      if (error) {\n        setError(error.message || \"Помилка при обробці платежу\"); // Якщо є помилка при оплаті\n      } else if (paymentIntent.status === \"succeeded\") {\n        // Якщо оплата пройшла успішно\n        const token = localStorage.getItem(\"token\");\n        fetch(\"http://localhost:5000/user/bookings\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            roomId: id,\n            checkIn: checkInDate,\n            checkOut: checkOutDate,\n            totalAmount: totalPrice // Додаємо totalAmount до запиту\n          })\n        }).then(() => {\n          alert(\"Бронювання успішно створено!\");\n          navigate(\"/dashboard\"); // Перенаправляємо користувача в особистий кабінет\n        }).catch(err => {\n          setError(\"Помилка при створенні бронювання\");\n          console.error(err);\n        });\n      }\n    } catch (err) {\n      setError(\"Помилка при обробці платежу\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 21\n  }, this);\n  if (!room) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u043D\\u043E\\u043C\\u0435\\u0440\\u0443...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u0411\\u0440\\u043E\\u043D\\u044E\\u0432\\u0430\\u043D\\u043D\\u044F \\u043D\\u043E\\u043C\\u0435\\u0440\\u0443: \", room.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0417\\u0430\\u0433\\u0430\\u043B\\u044C\\u043D\\u0430 \\u0441\\u0443\\u043C\\u0430 \\u0434\\u043E \\u043E\\u043F\\u043B\\u0430\\u0442\\u0438: \", totalPrice, \" \\u0433\\u0440\\u043D\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      disabled: loading,\n      children: loading ? \"Зачекайте...\" : \"Оплатити та підтвердити бронювання\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingPage, \"B0O94FWpo1/eHg6DQve6ULsdHnk=\", false, function () {\n  return [useParams, useNavigate, useLocation, useStripe, useElements];\n});\n_c = BookingPage;\nexport default BookingPage;\nvar _c;\n$RefreshReg$(_c, \"BookingPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","useLocation","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","BookingPage","_s","id","navigate","location","checkInDate","checkOutDate","state","room","setRoom","error","setError","loading","setLoading","totalPrice","setTotalPrice","stripe","elements","token","localStorage","getItem","fetch","then","response","json","data","catch","err","console","calculateDays","startDate","endDate","start","Date","end","diffTime","Math","abs","getTime","diffDays","ceil","days","price","handlePayment","method","headers","Authorization","body","JSON","stringify","amount","clientSecret","cardElement","getElement","paymentIntent","confirmCardPayment","payment_method","card","message","status","roomId","checkIn","checkOut","totalAmount","alert","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/hotel-booking/frontend/src/modules/BookingPage/BookingPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\"; // Імпортуємо Stripe Elements\n\nconst BookingPage = () => {\n  const { id } = useParams(); // Отримуємо ID номера\n  const navigate = useNavigate();\n  const location = useLocation(); // Отримуємо state з RoomDetailsPage\n  const { checkInDate, checkOutDate } = location.state || {};\n  const [room, setRoom] = useState<any>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [totalPrice, setTotalPrice] = useState<number>(0); // Загальна ціна\n  const stripe = useStripe();\n  const elements = useElements();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n\n    if (id) {\n      fetch(`http://localhost:5000/rooms/${id}`)\n        .then((response) => response.json())\n        .then((data) => setRoom(data))\n        .catch((err) => {\n          setError(\"Помилка при завантаженні номеру\");\n          console.error(err);\n        });\n    }\n  }, [id, navigate]);\n\n  // Функція для обчислення кількості днів між датами\n  const calculateDays = (startDate: string, endDate: string) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const diffTime = Math.abs(end.getTime() - start.getTime());\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); // Перетворюємо мілісекунди на дні\n    return diffDays;\n  };\n\n  // Обчислюємо загальну суму\n  useEffect(() => {\n    if (checkInDate && checkOutDate && room) {\n      const days = calculateDays(checkInDate, checkOutDate);\n      setTotalPrice(room.price * days); // Множимо ціну за день на кількість днів\n    }\n  }, [checkInDate, checkOutDate, room]);\n\n  const handlePayment = async () => {\n    if (!stripe || !elements) {\n      // Якщо Stripe або Elements ще не ініціалізовані, не робимо нічого\n      return;\n    }\n\n    setLoading(true);\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n\n    try {\n      // Запит на створення Payment Intent\n      const response = await fetch(\n        \"http://localhost:5000/create-payment-intent\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify({ amount: totalPrice }), // amount - це ціна номера\n        }\n      );\n\n      const { clientSecret } = await response.json(); // Отримуємо clientSecret\n\n      const cardElement = elements.getElement(CardElement);\n      if (!cardElement) {\n        setError(\"Не вдалося отримати дані картки\");\n        return;\n      }\n\n      // Завершення платежу через Stripe Elements\n      const { error, paymentIntent } = await stripe.confirmCardPayment(\n        clientSecret,\n        {\n          payment_method: {\n            card: cardElement, // Збираємо дані картки\n          },\n        }\n      );\n\n      if (error) {\n        setError(error.message || \"Помилка при обробці платежу\"); // Якщо є помилка при оплаті\n      } else if (paymentIntent.status === \"succeeded\") {\n        // Якщо оплата пройшла успішно\n        const token = localStorage.getItem(\"token\");\n        fetch(\"http://localhost:5000/user/bookings\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify({\n            roomId: id,\n            checkIn: checkInDate,\n            checkOut: checkOutDate,\n            totalAmount: totalPrice, // Додаємо totalAmount до запиту\n          }),\n        })\n          .then(() => {\n            alert(\"Бронювання успішно створено!\");\n            navigate(\"/dashboard\"); // Перенаправляємо користувача в особистий кабінет\n          })\n          .catch((err) => {\n            setError(\"Помилка при створенні бронювання\");\n            console.error(err);\n          });\n      }\n    } catch (err) {\n      setError(\"Помилка при обробці платежу\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (error) return <p style={{ color: \"red\" }}>{error}</p>;\n  if (!room) return <p>Завантаження номеру...</p>;\n\n  return (\n    <div>\n      <h2>Бронювання номеру: {room.name}</h2>\n      <p>Загальна сума до оплати: {totalPrice} грн</p>\n      <div>\n        {/* Форма для введення платіжних даних */}\n        <CardElement />\n      </div>\n      <button onClick={handlePayment} disabled={loading}>\n        {loading ? \"Зачекайте...\" : \"Оплатити та підтвердити бронювання\"}\n      </button>\n    </div>\n  );\n};\n\nexport default BookingPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACtE,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/E,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM;IAAEW,WAAW;IAAEC;EAAa,CAAC,GAAGF,QAAQ,CAACG,KAAK,IAAI,CAAC,CAAC;EAC1D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAM,IAAI,CAAC;EAC3C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAS,CAAC,CAAC,CAAC,CAAC;EACzD,MAAMyB,MAAM,GAAGpB,SAAS,CAAC,CAAC;EAC1B,MAAMqB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAE9BP,SAAS,CAAC,MAAM;IACd,MAAM4B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVf,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEA,IAAID,EAAE,EAAE;MACNmB,KAAK,CAAC,+BAA+BnB,EAAE,EAAE,CAAC,CACvCoB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKhB,OAAO,CAACgB,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEC,GAAG,IAAK;QACdhB,QAAQ,CAAC,iCAAiC,CAAC;QAC3CiB,OAAO,CAAClB,KAAK,CAACiB,GAAG,CAAC;MACpB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACzB,EAAE,EAAEC,QAAQ,CAAC,CAAC;;EAElB;EACA,MAAM0B,aAAa,GAAGA,CAACC,SAAiB,EAAEC,OAAe,KAAK;IAC5D,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACH,SAAS,CAAC;IACjC,MAAMI,GAAG,GAAG,IAAID,IAAI,CAACF,OAAO,CAAC;IAC7B,MAAMI,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACH,GAAG,CAACI,OAAO,CAAC,CAAC,GAAGN,KAAK,CAACM,OAAO,CAAC,CAAC,CAAC;IAC1D,MAAMC,QAAQ,GAAGH,IAAI,CAACI,IAAI,CAACL,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9D,OAAOI,QAAQ;EACjB,CAAC;;EAED;EACAjD,SAAS,CAAC,MAAM;IACd,IAAIe,WAAW,IAAIC,YAAY,IAAIE,IAAI,EAAE;MACvC,MAAMiC,IAAI,GAAGZ,aAAa,CAACxB,WAAW,EAAEC,YAAY,CAAC;MACrDS,aAAa,CAACP,IAAI,CAACkC,KAAK,GAAGD,IAAI,CAAC,CAAC,CAAC;IACpC;EACF,CAAC,EAAE,CAACpC,WAAW,EAAEC,YAAY,EAAEE,IAAI,CAAC,CAAC;EAErC,MAAMmC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAAC3B,MAAM,IAAI,CAACC,QAAQ,EAAE;MACxB;MACA;IACF;IAEAJ,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVf,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEA,IAAI;MACF;MACA,MAAMoB,QAAQ,GAAG,MAAMF,KAAK,CAC1B,6CAA6C,EAC7C;QACEuB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAU5B,KAAK;QAChC,CAAC;QACD6B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAEpC;QAAW,CAAC,CAAC,CAAE;MAChD,CACF,CAAC;MAED,MAAM;QAAEqC;MAAa,CAAC,GAAG,MAAM5B,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;;MAEhD,MAAM4B,WAAW,GAAGnC,QAAQ,CAACoC,UAAU,CAAC1D,WAAW,CAAC;MACpD,IAAI,CAACyD,WAAW,EAAE;QAChBzC,QAAQ,CAAC,iCAAiC,CAAC;QAC3C;MACF;;MAEA;MACA,MAAM;QAAED,KAAK;QAAE4C;MAAc,CAAC,GAAG,MAAMtC,MAAM,CAACuC,kBAAkB,CAC9DJ,YAAY,EACZ;QACEK,cAAc,EAAE;UACdC,IAAI,EAAEL,WAAW,CAAE;QACrB;MACF,CACF,CAAC;MAED,IAAI1C,KAAK,EAAE;QACTC,QAAQ,CAACD,KAAK,CAACgD,OAAO,IAAI,6BAA6B,CAAC,CAAC,CAAC;MAC5D,CAAC,MAAM,IAAIJ,aAAa,CAACK,MAAM,KAAK,WAAW,EAAE;QAC/C;QACA,MAAMzC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3CC,KAAK,CAAC,qCAAqC,EAAE;UAC3CuB,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAE,UAAU5B,KAAK;UAChC,CAAC;UACD6B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBW,MAAM,EAAE1D,EAAE;YACV2D,OAAO,EAAExD,WAAW;YACpByD,QAAQ,EAAExD,YAAY;YACtByD,WAAW,EAAEjD,UAAU,CAAE;UAC3B,CAAC;QACH,CAAC,CAAC,CACCQ,IAAI,CAAC,MAAM;UACV0C,KAAK,CAAC,8BAA8B,CAAC;UACrC7D,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,CACDuB,KAAK,CAAEC,GAAG,IAAK;UACdhB,QAAQ,CAAC,kCAAkC,CAAC;UAC5CiB,OAAO,CAAClB,KAAK,CAACiB,GAAG,CAAC;QACpB,CAAC,CAAC;MACN;IACF,CAAC,CAAC,OAAOA,GAAG,EAAE;MACZhB,QAAQ,CAAC,6BAA6B,CAAC;MACvCiB,OAAO,CAAClB,KAAK,CAACiB,GAAG,CAAC;IACpB,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAIH,KAAK,EAAE,oBAAOX,OAAA;IAAGkE,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAC,QAAA,EAAEzD;EAAK;IAAA0D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EACzD,IAAI,CAAC/D,IAAI,EAAE,oBAAOT,OAAA;IAAAoE,QAAA,EAAG;EAAsB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE/C,oBACExE,OAAA;IAAAoE,QAAA,gBACEpE,OAAA;MAAAoE,QAAA,GAAI,qGAAmB,EAAC3D,IAAI,CAACgE,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvCxE,OAAA;MAAAoE,QAAA,GAAG,+HAAyB,EAACrD,UAAU,EAAC,qBAAI;IAAA;MAAAsD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChDxE,OAAA;MAAAoE,QAAA,eAEEpE,OAAA,CAACJ,WAAW;QAAAyE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACNxE,OAAA;MAAQ0E,OAAO,EAAE9B,aAAc;MAAC+B,QAAQ,EAAE9D,OAAQ;MAAAuD,QAAA,EAC/CvD,OAAO,GAAG,cAAc,GAAG;IAAoC;MAAAwD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACtE,EAAA,CA/IID,WAAW;EAAA,QACAP,SAAS,EACPD,WAAW,EACXE,WAAW,EAMbE,SAAS,EACPC,WAAW;AAAA;AAAA8E,EAAA,GAVxB3E,WAAW;AAiJjB,eAAeA,WAAW;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}