{"ast":null,"code":"var _jsxFileName = \"E:\\\\hotel-booking\\\\frontend\\\\src\\\\modules\\\\AuthPage\\\\AuthPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\"; // Імпортуємо AuthContext\nimport './AuthPage.scss'; // Імпортуємо стилі\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); // Поле для підтвердження пароля\n  const [firstName, setFirstName] = useState(\"\"); // Ім'я\n  const [lastName, setLastName] = useState(\"\"); // Прізвище\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Додаткові стейти для помилок валідації\n  const [emailError, setEmailError] = useState(null);\n  const [passwordError, setPasswordError] = useState(null);\n  const [confirmPasswordError, setConfirmPasswordError] = useState(null);\n  const [firstNameError, setFirstNameError] = useState(null);\n  const [lastNameError, setLastNameError] = useState(null);\n  const navigate = useNavigate();\n  const authContext = useContext(AuthContext);\n  if (!authContext) {\n    throw new Error(\"AuthContext is not available\");\n  }\n  const {\n    login\n  } = authContext;\n\n  // Валідація email\n  const validateEmail = email => {\n    const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    return regex.test(email);\n  };\n\n  // Валідація пароля\n  const validatePassword = password => {\n    return password.length >= 6; // Перевірка мінімальної довжини пароля\n  };\n\n  // Валідація підтвердження пароля\n  const validateConfirmPassword = (password, confirmPassword) => {\n    return password === confirmPassword;\n  };\n\n  // Валідація форми перед відправленням\n  const validateForm = () => {\n    let valid = true;\n    if (!validateEmail(email)) {\n      setEmailError(\"Електронна пошта повинна мати формат: user@example.com\");\n      valid = false;\n    } else {\n      setEmailError(null);\n    }\n    if (!validatePassword(password)) {\n      setPasswordError(\"Пароль має бути не менше 6 символів.\");\n      valid = false;\n    } else {\n      setPasswordError(null);\n    }\n    if (!isLogin && !validateConfirmPassword(password, confirmPassword)) {\n      setConfirmPasswordError(\"Паролі не збігаються.\");\n      valid = false;\n    } else {\n      setConfirmPasswordError(null);\n    }\n    if (!isLogin && !firstName) {\n      setFirstNameError(\"Будь ласка, введіть ваше ім'я.\");\n      valid = false;\n    } else {\n      setFirstNameError(null);\n    }\n    if (!isLogin && !lastName) {\n      setLastNameError(\"Будь ласка, введіть ваше прізвище.\");\n      valid = false;\n    } else {\n      setLastNameError(null);\n    }\n    return valid;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Перевірка валідності перед відправкою\n    if (!validateForm()) {\n      setError(\"Будь ласка, виправте помилки.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const endpoint = isLogin ? \"login\" : \"register\";\n    const body = {\n      email,\n      password,\n      firstName,\n      lastName\n    }; // Видаляємо поле username\n\n    try {\n      const response = await fetch(`http://localhost:5000/${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        setError(errorData.message || \"Невірний логін або пароль\");\n        return;\n      }\n      const data = await response.json();\n      login(data.token);\n      if (data.token) {\n        const decodedToken = JSON.parse(atob(data.token.split(\".\")[1]));\n        if (decodedToken.role === \"manager\") {\n          navigate(\"/manage-rooms\");\n        } else {\n          navigate(\"/rooms\");\n        }\n      } else {\n        setError(\"Токен не отримано\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Помилка при підключенні до сервера\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      noValidate: true,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0441\\u0432\\u043E\\u044E \\u0435\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0443 \\u0430\\u0434\\u0440\\u0435\\u0441\\u0443\",\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 26\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0441\\u0432\\u0456\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          id: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"\\u041F\\u0456\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u044C\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u041F\\u0456\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u044C\\u0442\\u0435 \\u0441\\u0432\\u0456\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          id: \"confirmPassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), confirmPasswordError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: confirmPasswordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 38\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"\\u0406\\u043C'\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0412\\u043A\\u0430\\u0436\\u0456\\u0442\\u044C \\u0441\\u0432\\u043E\\u0454 \\u0456\\u043C'\\u044F\",\n            type: \"text\",\n            name: \"firstName\",\n            value: firstName,\n            onChange: e => setFirstName(e.target.value),\n            id: \"firstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), firstNameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: firstNameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 34\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"\\u041F\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0412\\u043A\\u0430\\u0436\\u0456\\u0442\\u044C \\u0441\\u0432\\u043E\\u0454 \\u043F\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435\",\n            type: \"text\",\n            name: \"lastName\",\n            value: lastName,\n            onChange: e => setLastName(e.target.value),\n            id: \"lastName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), lastNameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: lastNameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 33\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Зачекайте...\" : isLogin ? \"Увійти\" : \"Зареєструватися\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isLogin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\u0429\\u0435 \\u043D\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u043E\\u0432\\u0430\\u043D\\u0456?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsLogin(false),\n          children: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\u0412\\u0436\\u0435 \\u043C\\u0430\\u0454\\u0442\\u0435 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsLogin(true),\n          children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"/rqe6eMH0b/I3IfHhUdrIh9QXDA=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useNavigate","useContext","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthPage","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","isLogin","setIsLogin","error","setError","loading","setLoading","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","firstNameError","setFirstNameError","lastNameError","setLastNameError","navigate","authContext","Error","login","validateEmail","regex","test","validatePassword","length","validateConfirmPassword","validateForm","valid","handleSubmit","e","preventDefault","endpoint","body","response","fetch","method","headers","JSON","stringify","ok","errorData","json","message","data","token","decodedToken","parse","atob","split","role","err","console","className","children","onSubmit","noValidate","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","name","value","onChange","target","id","disabled","onClick","style","color","_c","$RefreshReg$"],"sources":["E:/hotel-booking/frontend/src/modules/AuthPage/AuthPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\"; // Імпортуємо AuthContext\nimport './AuthPage.scss'; // Імпортуємо стилі\n\nconst AuthPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); // Поле для підтвердження пароля\n  const [firstName, setFirstName] = useState(\"\"); // Ім'я\n  const [lastName, setLastName] = useState(\"\"); // Прізвище\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  // Додаткові стейти для помилок валідації\n  const [emailError, setEmailError] = useState<string | null>(null);\n  const [passwordError, setPasswordError] = useState<string | null>(null);\n  const [confirmPasswordError, setConfirmPasswordError] = useState<string | null>(null);\n  const [firstNameError, setFirstNameError] = useState<string | null>(null);\n  const [lastNameError, setLastNameError] = useState<string | null>(null);\n\n  const navigate = useNavigate();\n  const authContext = useContext(AuthContext);\n\n  if (!authContext) {\n    throw new Error(\"AuthContext is not available\");\n  }\n\n  const { login } = authContext;\n\n  // Валідація email\n  const validateEmail = (email: string) => {\n    const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    return regex.test(email);\n  };\n\n  // Валідація пароля\n  const validatePassword = (password: string) => {\n    return password.length >= 6; // Перевірка мінімальної довжини пароля\n  };\n\n  // Валідація підтвердження пароля\n  const validateConfirmPassword = (password: string, confirmPassword: string) => {\n    return password === confirmPassword;\n  };\n\n  // Валідація форми перед відправленням\n  const validateForm = () => {\n    let valid = true;\n    if (!validateEmail(email)) {\n      setEmailError(\"Електронна пошта повинна мати формат: user@example.com\");\n      valid = false;\n    } else {\n      setEmailError(null);\n    }\n\n    if (!validatePassword(password)) {\n      setPasswordError(\"Пароль має бути не менше 6 символів.\");\n      valid = false;\n    } else {\n      setPasswordError(null);\n    }\n\n    if (!isLogin && !validateConfirmPassword(password, confirmPassword)) {\n      setConfirmPasswordError(\"Паролі не збігаються.\");\n      valid = false;\n    } else {\n      setConfirmPasswordError(null);\n    }\n\n    if (!isLogin && !firstName) {\n      setFirstNameError(\"Будь ласка, введіть ваше ім'я.\");\n      valid = false;\n    } else {\n      setFirstNameError(null);\n    }\n\n    if (!isLogin && !lastName) {\n      setLastNameError(\"Будь ласка, введіть ваше прізвище.\");\n      valid = false;\n    } else {\n      setLastNameError(null);\n    }\n\n    return valid;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Перевірка валідності перед відправкою\n    if (!validateForm()) {\n      setError(\"Будь ласка, виправте помилки.\");\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    const endpoint = isLogin ? \"login\" : \"register\";\n    const body = { email, password, firstName, lastName }; // Видаляємо поле username\n\n    try {\n      const response = await fetch(`http://localhost:5000/${endpoint}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        setError(errorData.message || \"Невірний логін або пароль\");\n        return;\n      }\n\n      const data = await response.json();\n      login(data.token);\n\n      if (data.token) {\n        const decodedToken = JSON.parse(atob(data.token.split(\".\")[1]));\n        \n        if (decodedToken.role === \"manager\") {\n          navigate(\"/manage-rooms\");\n        } else {\n          navigate(\"/rooms\");\n        }\n      } else {\n        setError(\"Токен не отримано\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Помилка при підключенні до сервера\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-form-container\">\n      <form onSubmit={handleSubmit} className=\"auth-form\" noValidate> {/* Забороняємо вбудовану валідацію браузера */}\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            placeholder=\"Введіть свою електронну адресу\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            id=\"email\"\n          />\n          {emailError && <div className=\"error-message\">{emailError}</div>} {/* Показуємо помилку */}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Пароль</label>\n          <input\n            placeholder=\"Введіть свій пароль\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            id=\"password\"\n          />\n          {passwordError && <div className=\"error-message\">{passwordError}</div>} {/* Показуємо помилку */}\n        </div>\n\n        {/* Покажемо поле для підтвердження пароля тільки на реєстрації */}\n        {!isLogin && (\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">Підтвердьте пароль</label>\n            <input\n              placeholder=\"Підтвердьте свій пароль\"\n              type=\"password\"\n              name=\"confirmPassword\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              id=\"confirmPassword\"\n            />\n            {confirmPasswordError && <div className=\"error-message\">{confirmPasswordError}</div>} {/* Показуємо помилку */}\n          </div>\n        )}\n\n        {!isLogin && (\n          <>\n            <div className=\"form-group\">\n              <label htmlFor=\"firstName\">Ім'я</label>\n              <input\n                placeholder=\"Вкажіть своє ім'я\"\n                type=\"text\"\n                name=\"firstName\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                id=\"firstName\"\n              />\n              {firstNameError && <div className=\"error-message\">{firstNameError}</div>} {/* Показуємо помилку */}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"lastName\">Прізвище</label>\n              <input\n                placeholder=\"Вкажіть своє прізвище\"\n                type=\"text\"\n                name=\"lastName\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                id=\"lastName\"\n              />\n              {lastNameError && <div className=\"error-message\">{lastNameError}</div>} {/* Показуємо помилку */}\n            </div>\n          </>\n        )}\n\n        <button type=\"submit\" disabled={loading}>\n          {loading ? \"Зачекайте...\" : isLogin ? \"Увійти\" : \"Зареєструватися\"}\n        </button>\n      </form>\n\n      <p>\n        {isLogin ? (\n          <>\n            Ще не зареєстровані?{\" \"}\n            <button onClick={() => setIsLogin(false)}>Реєстрація</button>\n          </>\n        ) : (\n          <>\n            Вже маєте акаунт?{\" \"}\n            <button onClick={() => setIsLogin(true)}>Увійти</button>\n          </>\n        )}\n      </p>\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n    </div>\n  );\n};\n\nexport default AuthPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}